//////////loginController.js

const express = require('express'); 
const mongoose = require('mongoose'); 
const app = express(); 
const User = require('../models/users'); 
const bcrypt = require('bcryptjs'); 

async function login(req, res) {
    const { email, password } = req.body;

    if (!email || !password) {
        return res.status(400).send('Введите email и пароль');
    }

    const user = await User.findOne({ email });

    const isPasswordCorrect = bcrypt.compareSync(password, user.password);
    if (!isPasswordCorrect) {
        return res.status(400).send('Неверный email или пароль');
    }

    req.session.isAuthenticated = true;
    req.session.user = {
        _id: user._id,
        email: user.email,
        role: user.role
    };
    
    res.redirect('/');
}

module.exports = {
    login
};




////////////logoutController.js

function logout(req, res) {
    req.session.destroy(function(err) { 
        if (err) {
            console.log(err); 
        } else {
            res.redirect('/'); 
        }
    });
}

module.exports = {
    logout
};



///////////registerController.js

const bcrypt = require('bcryptjs'); 
const User = require('../models/users'); 

async function register(req, res) {
    const { email, password } = req.body; 

    if (!email || !password) {
        return res.status(400).send('Введите email и пароль');
    }

    const existingUser = await User.findOne({ email });
    if (existingUser) {
        return res.status(400).send('Пользователь с таким email уже зарегистрирован');
    }

    const hashedPassword = bcrypt.hashSync(password, 10);

    const user = new User({
        email,
        password: hashedPassword,
    });

    try {
        await user.save();
        res.send('Вы успешно зарегистрировались');
    } catch (err) {
        res.status(500).send('Ошибка при сохранении пользователя в базе данных');
    }
}

module.exports = {
    register
};


